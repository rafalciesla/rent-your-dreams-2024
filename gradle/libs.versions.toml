[versions]

java = "21"
kotlin = "2.1.0"
kotlin-logging = "7.0.0"
kotlin-coroutines = "1.10.1"
spring-boot = "3.4.1"
spring-cloud = "2024.0.0"
spring-dependency-management = "1.1.6"
spring-openapi = "2.6.0"
open-telemetry = "1.33.5"
jib = "3.4.4"


[libraries]

# Ryd libs
ryd-lib = { module = "pl.ciesla.ryd:lib" }

# Kotlin
kotlin-logging = { module = "io.github.oshai:kotlin-logging-jvm", version.ref = "kotlin-logging" }
kotlin-reflect = { module = "org.jetbrains.kotlin:kotlin-reflect", version.ref = "kotlin"}
kotlin-coroutines = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlin-coroutines" }
jacksonModule-kotlin = { module = "com.fasterxml.jackson.module:jackson-module-kotlin" }

# Spring Core / Web
spring-web = { module = "org.springframework.boot:spring-boot-starter-web", version.ref = "spring-boot" }
spring-openapi = { module = "org.springdoc:springdoc-openapi-starter-webmvc-ui", version.ref = "spring-openapi" }

# Spring Cloud
spring-cloud-configClient = { module = "org.springframework.cloud:spring-cloud-starter-config" }
spring-cloud-configServer = { module = "org.springframework.cloud:spring-cloud-config-server" }
spring-cloud-eurekaClient = { module ="org.springframework.cloud:spring-cloud-starter-netflix-eureka-client" }
spring-cloud-eurekaServer = { module = "org.springframework.cloud:spring-cloud-starter-netflix-eureka-server" }
spring-cloud-openfeign = { module = "org.springframework.cloud:spring-cloud-starter-openfeign" }
spring-cloud-resilience4j = { module = "org.springframework.cloud:spring-cloud-starter-circuitbreaker-resilience4j" }
spring-cloud-gateway = { module = "org.springframework.cloud:spring-cloud-starter-gateway" }
spring-cloud-stream = { module = "org.springframework.cloud:spring-cloud-stream" }
spring-cloud-stream-rabbit = { module = "org.springframework.cloud:spring-cloud-stream-binder-rabbit" }

# Spring Security
spring-security = { module = "org.springframework.boot:spring-boot-starter-security" }
spring-security-oauth2-resourceServer = { module = "org.springframework.security:spring-security-oauth2-resource-server" }
spring-security-oauth2-jose = { module = "org.springframework.security:spring-security-oauth2-jose" }

# Observability
spring-actuator = { module = "org.springframework.boot:spring-boot-starter-actuator", version.ref = "spring-boot"}
prometheus = { module = "io.micrometer:micrometer-registry-prometheus" }
open-telemetry = { module = "io.opentelemetry.javaagent:opentelemetry-javaagent", version.ref = "open-telemetry" } # runtimeOnly

# Resiliency
resilience4j-circuitBreaker = { module = "org.springframework.cloud:spring-cloud-starter-circuitbreaker-reactor-resilience4j" }
redis-reactive = { module = "org.springframework.boot:spring-boot-starter-data-redis-reactive" }

# Development
spring-devtools = { module = "org.springframework.boot:spring-boot-devtools", version.ref = "spring-boot" }

# DB
spring-data = { module = "org.springframework.boot:spring-boot-starter-data-jpa" }
flyway-core = { module = "org.flywaydb:flyway-core" }
flyway-postgres = { module = "org.flywaydb:flyway-database-postgresql" }
postgres-runtime = { module = "org.postgresql:postgresql" } #runtimeOnly

# Code generation
lombok-compile = { module = "org.projectlombok:lombok" } #compileOnly
lombok-annotation = { module = "org.projectlombok:lombok" } #annotationProcessor

# Tests
spring-boot-test = { module = "org.springframework.boot:spring-boot-starter-test" }
kotlin-junit = { module = "org.jetbrains.kotlin:kotlin-test-junit5" }
junit-launcher = { module = "org.junit.platform:junit-platform-launcher" } #testRuntimeOnly


[plugins]

kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlin-spring = { id = "org.jetbrains.kotlin.plugin.spring", version.ref = "kotlin" }
kotlin-jpa = { id = "org.jetbrains.kotlin.plugin.jpa", version.ref = "kotlin" }
kotlin-noarg = { id = "org.jetbrains.kotlin.plugin.noarg", version.ref = "kotlin" }

springBoot = { id = "org.springframework.boot", version.ref = "spring-boot" }
springBoot-dependencyManagement = { id = "io.spring.dependency-management", version.ref = "spring-dependency-management" }
jib = { id = "com.google.cloud.tools.jib", version.ref = "jib" }
groovy = { id = "groovy" }


[bundles]

kotlin = ["jacksonModule-kotlin", "kotlin-reflect", "kotlin-coroutines", "kotlin-logging"]
postgres-db = ["spring-data", "flyway-core", "flyway-postgres"]
test = ["spring-boot-test", "kotlin-junit", "junit-launcher"]
spring-web = ["spring-web", "spring-openapi"]
spring-cloud = ["spring-cloud-configClient", "spring-cloud-eurekaClient", "spring-cloud-openfeign", "spring-cloud-openfeign", "spring-cloud-resilience4j"]
observability = ["spring-actuator", "kotlin-logging", "prometheus"]

