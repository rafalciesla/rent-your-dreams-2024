server:
  port: 8102

spring:
  application:
    name: cars
  profiles:
    active: local
  datasource:
    url: jdbc:postgresql://localhost:5432/rent_your_dreams
    username: postgres
    password: 5432
    driver-class-name: org.postgresql.Driver
  jpa:
    show-sql: true
    hibernate:
      ddl-auto: validate
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        default_schema: cars
  flyway:
    create-schemas: true
    schemas: cars
    baseline-on-migrate: true
  cloud:
    openfeign:
      circuitbreaker:
        enabled: true
  config:
    host: "http://localhost:8071/"
    import: "configserver:${spring.config.host}"

management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    shutdown:
      access: unrestricted
  info:
    env:
      enabled: true # enable environment info
  metrics:
    tags:
      application: ${spring.application.name}

endpoints:
  shutdown:
    enabled: true

logging:
  pattern:
    level: "%5p [${spring.application.name},%X{trace_id},%X{span_id}]"

eureka:
  instance:
    prefer-ip-address: true  # when no DNS mapping is set up set this to true
  client:
    fetch-registry: true
    register-with-eureka: true
    service-url:
      defaultZone: http://localhost:8070/eureka

# Resiliency
resilience4j.retry:
  configs:
    default:
      max-attempts: 3
      wait-duration: 100
      enable-exponential-backoff: true
      exponential-backoff-multiplier: 2
resilience4j.circuitbreaker:
  configs:
    default:
      sliding-window-size: 10
      permitted-number-of-calls-in-half-open-state: 2
      failure-rate-threshold: 50
      wait-duration-in-open-state: 10000
resilience4j.ratelimiter:
  configs:
    default:
      timeout-duration: 1000
      limit-refresh-period: 5000
      limit-for-period: 100